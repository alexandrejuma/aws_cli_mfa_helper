#!/bin/bash

##########################################################################################################
#Script Name	: awscli_mfa_init.sh                                                                                             
#Description	: Script used to obtain temporary AWS Session Token for MFA enabled users                                                                                 
#Args          	: <MFA Code>                                                                                          
#Exit Codes	: {1 -> Illegal parameters, 2 -> Missing binary requirements, 3 -> No AWS Config found, 4 -> AWS Client failure}
#Author       	: Alexandre Juma                                               
#Email         	: alexandre.juma@celfocus.com                                      
#########################################################################################################

# Editable variables

BIN_REQUIREMENTS=(awk jq aws)
AWS_CREDENTIALS_FILE=~/.aws/credentials

# Error Handler

function error_handler {
        case $1 in
                1)
                        echo -e "ERROR: Illegal number of parameters. Usage: source ./awscli_mfa_init.sh <MFA Code>\n"
                        echo -e "MFA Code: 6 digit token generated by MFA Device (Physical or Virtual)"
                        ;;
                3)
                        echo -e "ERROR: No AWS CLI Config file found in ${AWS_CREDENTIALS_FILE}\n"
                        echo -e "A correctly formed credentials file is needed with at least mfa_serial, aws_access_key_id and aws_secret_access_key. Example:"
                        echo -e "\toutput = json"
                        echo -e "\tregion = eu-west-1"
                        echo -e "\tmfa_serial = arn:aws:iam::123456789999:mfa/alexandre.juma"
                        echo -e "\tws_access_key_id = ABCDEFGHIJKL12345678"
                        echo -e "\taws_secret_access_key = AbCdEfGhIjKlMnOpQrStUvXwZ111111123456789"
                        ;;
                4)
                        echo -e "ERROR: Failure obtaining Temporary Token (Response code: ${AWS_STS_RESP})"
                        echo -e "Exception: ${SESSION_TOKEN_RESP}"
                        ;;
                *)
                        echo -e "Unknown option"
                        ;;
        esac
}

# Checking arguments

if ! [ $# -eq 1 ] || ! [ ${#1} -eq 6 ] || ! [[ $1 =~ ^[0-9]+$ ]]; then
	error_handler 1
	return 1
fi

# Checking binary requirements

for i in "${BIN_REQUIREMENTS=[@]}"; do
	command -v "$i" >/dev/null 2>&1 || { echo >&2 "I require $i but it's not installed.  Aborting."; return 2; }
done

# Checking configuration requirements

if ! [ -f "${AWS_CREDENTIALS_FILE}" ]; then
	error_handler 3
	return 3
fi

# Clean current environment and get temporary session token

unset AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN

MFA_CODE=$1

MFA_ARN=$(
grep mfa_serial "${AWS_CREDENTIALS_FILE}" \
	| awk '{print $3}' \
	| tr -d " "
)

SESSION_TOKEN_RESP=$(
aws sts get-session-token \
	--serial-number "${MFA_ARN}" \
	--token-code "${MFA_CODE}" \
	--output json \
	2>&1
)

AWS_STS_RESP=$?

if [ $AWS_STS_RESP -ne 0 ]; then
	error_handler 4
	return 4
fi

# Set required environment variables

AWS_ACCESS_KEY_ID=$(
echo "${SESSION_TOKEN_RESP}" \
	| jq -r '.Credentials.AccessKeyId'
)

AWS_SECRET_ACCESS_KEY=$(
echo "${SESSION_TOKEN_RESP}" \
	| jq -r '.Credentials.SecretAccessKey'
)

AWS_SESSION_TOKEN=$(
echo "${SESSION_TOKEN_RESP}" \
	| jq -r '.Credentials.SessionToken'
)

export AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN

# Report success of AWS temporary session token and environment setup 

echo -e "SUCCESS: Correctly obtained a temporary token! You can now interact with AWS CLI.\n"
aws sts get-caller-identity

return 0
